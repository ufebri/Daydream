name: Generate & Deploy Wedding Site

on:
  push:
    paths: ['orders/*.json']
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run Generate Script
        run: node scripts/generate.js

      - name: Check if output exists
        id: check_output
        run: |
          if [ -d output ]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Read template touched
        id: touched
        run: |
          if [ -f .template-touched ]; then
            echo "templates=$(cat .template-touched | paste -sd ',' -)" >> $GITHUB_OUTPUT
          else
            echo "templates=" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Netlify
        if: steps.check_output.outputs.deploy == 'true'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm install -g netlify-cli
          netlify deploy --dir=output --prod --site $NETLIFY_SITE_ID

      - name: Bump NikahFlix Version
        if: steps.check_output.outputs.deploy == 'true' && contains(steps.touched.outputs.templates, 'nikahflix-react')
        run: |
          VERSION_FILE=templates/nikahflix-react/VERSION

          OLD_VERSION=$(cat $VERSION_FILE)
          MAJOR=$(echo $OLD_VERSION | cut -d. -f1)
          MINOR=$(echo $OLD_VERSION | cut -d. -f2)
          PATCH=$(echo $OLD_VERSION | cut -d. -f3)
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          echo $NEW_VERSION > $VERSION_FILE
          echo "üî¢ Version bumped: $OLD_VERSION ‚Üí $NEW_VERSION"

      - name: Commit & Push Version Bump
        if: steps.check_output.outputs.deploy == 'true' && contains(steps.touched.outputs.templates, 'nikahflix-react')
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git diff --quiet; then
            echo "üîç No changes to commit."
          else
            git add templates/nikahflix-react/VERSION
            git commit -m "chore(nikahflix): bump version to v$(cat templates/nikahflix-react/VERSION)"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
