name: Generate & Deploy Wedding Site

on:
  pull_request:
    paths: ["orders/*.json"]
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_APP_TABLE_NAME: ${{ secrets.VITE_APP_TABLE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch origin/master manually
        run: |
          git remote set-url origin https://github.com/${{ github.repository }}.git
          git fetch origin master

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Run Generate Script (Only New Orders)
        run: node scripts/generate.js --only-new

      - name: Check if output exists
        id: check_output
        run: |
          if [ -d output ]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Read template touched
        id: touched
        run: |
          if [ -f .template-touched ]; then
            echo "templates=$(cat .template-touched | paste -sd ',' -)" >> $GITHUB_OUTPUT
          else
            echo "templates=" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Netlify
        if: steps.check_output.outputs.deploy == 'true'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm install -g netlify-cli
          netlify deploy --dir=output --prod --site $NETLIFY_SITE_ID

      - name: Upload build log
        if: steps.check_output.outputs.deploy == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: logs/build.log
          if-no-files-found: warn
